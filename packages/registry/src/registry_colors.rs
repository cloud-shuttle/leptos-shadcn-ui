use std::{collections::HashMap, sync::LazyLock};

use crate::schema::Mode;

pub enum Color {
    String(String),
    Value(ColorValue),
    Values(Vec<ColorScaleValue>),
}

pub struct ColorValue {
    pub hex: String,
    pub rgb: String,
    pub hsl: String,
}

pub struct ColorScaleValue {
    pub scale: usize,
    pub hex: String,
    pub rgb: String,
    pub hsl: String,
}

pub static COLORS: LazyLock<HashMap<String, Color>> = LazyLock::new(|| {
    HashMap::from([
        ("inherit".into(), Color::String("inherit".into())),
        ("current".into(), Color::String("currentColor".into())),
        ("transparent".into(), Color::String("transparent".into())),
        (
            "black".into(),
            Color::Value(ColorValue {
                hex: "#000000".into(),
                rgb: "rgb(0,0,0)".into(),
                hsl: "hsl(0,0%,0%)".into(),
            }),
        ),
        (
            "white".into(),
            Color::Value(ColorValue {
                hex: "#ffffff".into(),
                rgb: "rgb(255,255,255)".into(),
                hsl: "hsl(0,0%,100%)".into(),
            }),
        ),
        (
            "slate".into(),
            Color::Values(vec![
                ColorScaleValue {
                    scale: 50,
                    hex: "#f8fafc".into(),
                    rgb: "rgb(248,250,252)".into(),
                    hsl: "hsl(210,40%,98%)".into(),
                },
                ColorScaleValue {
                    scale: 100,
                    hex: "#f1f5f9".into(),
                    rgb: "rgb(241,245,249)".into(),
                    hsl: "hsl(210,40%,96.1%)".into(),
                },
                ColorScaleValue {
                    scale: 200,
                    hex: "#e2e8f0".into(),
                    rgb: "rgb(226,232,240)".into(),
                    hsl: "hsl(214.3,31.8%,91.4%)".into(),
                },
                ColorScaleValue {
                    scale: 300,
                    hex: "#cbd5e1".into(),
                    rgb: "rgb(203,213,225)".into(),
                    hsl: "hsl(212.7,26.8%,83.9%)".into(),
                },
                ColorScaleValue {
                    scale: 400,
                    hex: "#94a3b8".into(),
                    rgb: "rgb(148,163,184)".into(),
                    hsl: "hsl(215,20.2%,65.1%)".into(),
                },
                ColorScaleValue {
                    scale: 500,
                    hex: "#64748b".into(),
                    rgb: "rgb(100,116,139)".into(),
                    hsl: "hsl(215.4,16.3%,46.9%)".into(),
                },
                ColorScaleValue {
                    scale: 600,
                    hex: "#475569".into(),
                    rgb: "rgb(71,85,105)".into(),
                    hsl: "hsl(215.3,19.3%,34.5%)".into(),
                },
                ColorScaleValue {
                    scale: 700,
                    hex: "#334155".into(),
                    rgb: "rgb(51,65,85)".into(),
                    hsl: "hsl(215.3,25%,26.7%)".into(),
                },
                ColorScaleValue {
                    scale: 800,
                    hex: "#1e293b".into(),
                    rgb: "rgb(30,41,59)".into(),
                    hsl: "hsl(217.2,32.6%,17.5%)".into(),
                },
                ColorScaleValue {
                    scale: 900,
                    hex: "#0f172a".into(),
                    rgb: "rgb(15,23,42)".into(),
                    hsl: "hsl(222.2,47.4%,11.2%)".into(),
                },
                ColorScaleValue {
                    scale: 950,
                    hex: "#020617".into(),
                    rgb: "rgb(2,6,23)".into(),
                    hsl: "hsl(222.2,84%,4.9%)".into(),
                },
            ]),
        ),
        (
            "gray".into(),
            Color::Values(vec![
                ColorScaleValue {
                    scale: 50,
                    hex: "#f9fafb".into(),
                    rgb: "rgb(249,250,251)".into(),
                    hsl: "hsl(210,20%,98%)".into(),
                },
                ColorScaleValue {
                    scale: 100,
                    hex: "#f3f4f6".into(),
                    rgb: "rgb(243,244,246)".into(),
                    hsl: "hsl(220,14.3%,95.9%)".into(),
                },
                ColorScaleValue {
                    scale: 200,
                    hex: "#e5e7eb".into(),
                    rgb: "rgb(229,231,235)".into(),
                    hsl: "hsl(220,13%,91%)".into(),
                },
                ColorScaleValue {
                    scale: 300,
                    hex: "#d1d5db".into(),
                    rgb: "rgb(209,213,219)".into(),
                    hsl: "hsl(216,12.2%,83.9%)".into(),
                },
                ColorScaleValue {
                    scale: 400,
                    hex: "#9ca3af".into(),
                    rgb: "rgb(156,163,175)".into(),
                    hsl: "hsl(217.9,10.6%,64.9%)".into(),
                },
                ColorScaleValue {
                    scale: 500,
                    hex: "#6b7280".into(),
                    rgb: "rgb(107,114,128)".into(),
                    hsl: "hsl(220,8.9%,46.1%)".into(),
                },
                ColorScaleValue {
                    scale: 600,
                    hex: "#4b5563".into(),
                    rgb: "rgb(75,85,99)".into(),
                    hsl: "hsl(215,13.8%,34.1%)".into(),
                },
                ColorScaleValue {
                    scale: 700,
                    hex: "#374151".into(),
                    rgb: "rgb(55,65,81)".into(),
                    hsl: "hsl(216.9,19.1%,26.7%)".into(),
                },
                ColorScaleValue {
                    scale: 800,
                    hex: "#1f2937".into(),
                    rgb: "rgb(31,41,55)".into(),
                    hsl: "hsl(215,27.9%,16.9%)".into(),
                },
                ColorScaleValue {
                    scale: 900,
                    hex: "#111827".into(),
                    rgb: "rgb(17,24,39)".into(),
                    hsl: "hsl(220.9,39.3%,11%)".into(),
                },
                ColorScaleValue {
                    scale: 950,
                    hex: "#030712".into(),
                    rgb: "rgb(3,7,18)".into(),
                    hsl: "hsl(224,71.4%,4.1%)".into(),
                },
            ]),
        ),
        (
            "zinc".into(),
            Color::Values(vec![
                ColorScaleValue {
                    scale: 50,
                    hex: "#fafafa".into(),
                    rgb: "rgb(250,250,250)".into(),
                    hsl: "hsl(0,0%,98%)".into(),
                },
                ColorScaleValue {
                    scale: 100,
                    hex: "#f4f4f5".into(),
                    rgb: "rgb(244,244,245)".into(),
                    hsl: "hsl(240,4.8%,95.9%)".into(),
                },
                ColorScaleValue {
                    scale: 200,
                    hex: "#e4e4e7".into(),
                    rgb: "rgb(228,228,231)".into(),
                    hsl: "hsl(240,5.9%,90%)".into(),
                },
                ColorScaleValue {
                    scale: 300,
                    hex: "#d4d4d8".into(),
                    rgb: "rgb(212,212,216)".into(),
                    hsl: "hsl(240,4.9%,83.9%)".into(),
                },
                ColorScaleValue {
                    scale: 400,
                    hex: "#a1a1aa".into(),
                    rgb: "rgb(161,161,170)".into(),
                    hsl: "hsl(240,5%,64.9%)".into(),
                },
                ColorScaleValue {
                    scale: 500,
                    hex: "#71717a".into(),
                    rgb: "rgb(113,113,122)".into(),
                    hsl: "hsl(240,3.8%,46.1%)".into(),
                },
                ColorScaleValue {
                    scale: 600,
                    hex: "#52525b".into(),
                    rgb: "rgb(82,82,91)".into(),
                    hsl: "hsl(240,5.2%,33.9%)".into(),
                },
                ColorScaleValue {
                    scale: 700,
                    hex: "#3f3f46".into(),
                    rgb: "rgb(63,63,70)".into(),
                    hsl: "hsl(240,5.3%,26.1%)".into(),
                },
                ColorScaleValue {
                    scale: 800,
                    hex: "#27272a".into(),
                    rgb: "rgb(39,39,42)".into(),
                    hsl: "hsl(240,3.7%,15.9%)".into(),
                },
                ColorScaleValue {
                    scale: 900,
                    hex: "#18181b".into(),
                    rgb: "rgb(24,24,27)".into(),
                    hsl: "hsl(240,5.9%,10%)".into(),
                },
                ColorScaleValue {
                    scale: 950,
                    hex: "#09090b".into(),
                    rgb: "rgb(9,9,11)".into(),
                    hsl: "hsl(240,10%,3.9%)".into(),
                },
            ]),
        ),
        (
            "neutral".into(),
            Color::Values(vec![
                ColorScaleValue {
                    scale: 50,
                    hex: "#fafafa".into(),
                    rgb: "rgb(250,250,250)".into(),
                    hsl: "hsl(0,0%,98%)".into(),
                },
                ColorScaleValue {
                    scale: 100,
                    hex: "#f5f5f5".into(),
                    rgb: "rgb(245,245,245)".into(),
                    hsl: "hsl(0,0%,96.1%)".into(),
                },
                ColorScaleValue {
                    scale: 200,
                    hex: "#e5e5e5".into(),
                    rgb: "rgb(229,229,229)".into(),
                    hsl: "hsl(0,0%,89.8%)".into(),
                },
                ColorScaleValue {
                    scale: 300,
                    hex: "#d4d4d4".into(),
                    rgb: "rgb(212,212,212)".into(),
                    hsl: "hsl(0,0%,83.1%)".into(),
                },
                ColorScaleValue {
                    scale: 400,
                    hex: "#a3a3a3".into(),
                    rgb: "rgb(163,163,163)".into(),
                    hsl: "hsl(0,0%,63.9%)".into(),
                },
                ColorScaleValue {
                    scale: 500,
                    hex: "#737373".into(),
                    rgb: "rgb(115,115,115)".into(),
                    hsl: "hsl(0,0%,45.1%)".into(),
                },
                ColorScaleValue {
                    scale: 600,
                    hex: "#525252".into(),
                    rgb: "rgb(82,82,82)".into(),
                    hsl: "hsl(0,0%,32.2%)".into(),
                },
                ColorScaleValue {
                    scale: 700,
                    hex: "#404040".into(),
                    rgb: "rgb(64,64,64)".into(),
                    hsl: "hsl(0,0%,25.1%)".into(),
                },
                ColorScaleValue {
                    scale: 800,
                    hex: "#262626".into(),
                    rgb: "rgb(38,38,38)".into(),
                    hsl: "hsl(0,0%,14.9%)".into(),
                },
                ColorScaleValue {
                    scale: 900,
                    hex: "#171717".into(),
                    rgb: "rgb(23,23,23)".into(),
                    hsl: "hsl(0,0%,9%)".into(),
                },
                ColorScaleValue {
                    scale: 950,
                    hex: "#0a0a0a".into(),
                    rgb: "rgb(10,10,10)".into(),
                    hsl: "hsl(0,0%,3.9%)".into(),
                },
            ]),
        ),
        (
            "stone".into(),
            Color::Values(vec![
                ColorScaleValue {
                    scale: 50,
                    hex: "#fafaf9".into(),
                    rgb: "rgb(250,250,249)".into(),
                    hsl: "hsl(60,9.1%,97.8%)".into(),
                },
                ColorScaleValue {
                    scale: 100,
                    hex: "#f5f5f4".into(),
                    rgb: "rgb(245,245,244)".into(),
                    hsl: "hsl(60,4.8%,95.9%)".into(),
                },
                ColorScaleValue {
                    scale: 200,
                    hex: "#e7e5e4".into(),
                    rgb: "rgb(231,229,228)".into(),
                    hsl: "hsl(20,5.9%,90%)".into(),
                },
                ColorScaleValue {
                    scale: 300,
                    hex: "#d6d3d1".into(),
                    rgb: "rgb(214,211,209)".into(),
                    hsl: "hsl(24,5.7%,82.9%)".into(),
                },
                ColorScaleValue {
                    scale: 400,
                    hex: "#a8a29e".into(),
                    rgb: "rgb(168,162,158)".into(),
                    hsl: "hsl(24,5.4%,63.9%)".into(),
                },
                ColorScaleValue {
                    scale: 500,
                    hex: "#78716c".into(),
                    rgb: "rgb(120,113,108)".into(),
                    hsl: "hsl(25,5.3%,44.7%)".into(),
                },
                ColorScaleValue {
                    scale: 600,
                    hex: "#57534e".into(),
                    rgb: "rgb(87,83,78)".into(),
                    hsl: "hsl(33.3,5.5%,32.4%)".into(),
                },
                ColorScaleValue {
                    scale: 700,
                    hex: "#44403c".into(),
                    rgb: "rgb(68,64,60)".into(),
                    hsl: "hsl(30,6.3%,25.1%)".into(),
                },
                ColorScaleValue {
                    scale: 800,
                    hex: "#292524".into(),
                    rgb: "rgb(41,37,36)".into(),
                    hsl: "hsl(12,6.5%,15.1%)".into(),
                },
                ColorScaleValue {
                    scale: 900,
                    hex: "#1c1917".into(),
                    rgb: "rgb(28,25,23)".into(),
                    hsl: "hsl(24,9.8%,10%)".into(),
                },
                ColorScaleValue {
                    scale: 950,
                    hex: "#0c0a09".into(),
                    rgb: "rgb(12,10,9)".into(),
                    hsl: "hsl(20,14.3%,4.1%)".into(),
                },
            ]),
        ),
        (
            "red".into(),
            Color::Values(vec![
                ColorScaleValue {
                    scale: 50,
                    hex: "#fef2f2".into(),
                    rgb: "rgb(254,242,242)".into(),
                    hsl: "hsl(0,85.7%,97.3%)".into(),
                },
                ColorScaleValue {
                    scale: 100,
                    hex: "#fee2e2".into(),
                    rgb: "rgb(254,226,226)".into(),
                    hsl: "hsl(0,93.3%,94.1%)".into(),
                },
                ColorScaleValue {
                    scale: 200,
                    hex: "#fecaca".into(),
                    rgb: "rgb(254,202,202)".into(),
                    hsl: "hsl(0,96.3%,89.4%)".into(),
                },
                ColorScaleValue {
                    scale: 300,
                    hex: "#fca5a5".into(),
                    rgb: "rgb(252,165,165)".into(),
                    hsl: "hsl(0,93.5%,81.8%)".into(),
                },
                ColorScaleValue {
                    scale: 400,
                    hex: "#f87171".into(),
                    rgb: "rgb(248,113,113)".into(),
                    hsl: "hsl(0,90.6%,70.8%)".into(),
                },
                ColorScaleValue {
                    scale: 500,
                    hex: "#ef4444".into(),
                    rgb: "rgb(239,68,68)".into(),
                    hsl: "hsl(0,84.2%,60.2%)".into(),
                },
                ColorScaleValue {
                    scale: 600,
                    hex: "#dc2626".into(),
                    rgb: "rgb(220,38,38)".into(),
                    hsl: "hsl(0,72.2%,50.6%)".into(),
                },
                ColorScaleValue {
                    scale: 700,
                    hex: "#b91c1c".into(),
                    rgb: "rgb(185,28,28)".into(),
                    hsl: "hsl(0,73.7%,41.8%)".into(),
                },
                ColorScaleValue {
                    scale: 800,
                    hex: "#991b1b".into(),
                    rgb: "rgb(153,27,27)".into(),
                    hsl: "hsl(0,70%,35.3%)".into(),
                },
                ColorScaleValue {
                    scale: 900,
                    hex: "#7f1d1d".into(),
                    rgb: "rgb(127,29,29)".into(),
                    hsl: "hsl(0,62.8%,30.6%)".into(),
                },
                ColorScaleValue {
                    scale: 950,
                    hex: "#450a0a".into(),
                    rgb: "rgb(69,10,10)".into(),
                    hsl: "hsl(0,74.7%,15.5%)".into(),
                },
            ]),
        ),
        (
            "orange".into(),
            Color::Values(vec![
                ColorScaleValue {
                    scale: 50,
                    hex: "#fff7ed".into(),
                    rgb: "rgb(255,247,237)".into(),
                    hsl: "hsl(33.3,100%,96.5%)".into(),
                },
                ColorScaleValue {
                    scale: 100,
                    hex: "#ffedd5".into(),
                    rgb: "rgb(255,237,213)".into(),
                    hsl: "hsl(34.3,100%,91.8%)".into(),
                },
                ColorScaleValue {
                    scale: 200,
                    hex: "#fed7aa".into(),
                    rgb: "rgb(254,215,170)".into(),
                    hsl: "hsl(32.1,97.7%,83.1%)".into(),
                },
                ColorScaleValue {
                    scale: 300,
                    hex: "#fdba74".into(),
                    rgb: "rgb(253,186,116)".into(),
                    hsl: "hsl(30.7,97.2%,72.4%)".into(),
                },
                ColorScaleValue {
                    scale: 400,
                    hex: "#fb923c".into(),
                    rgb: "rgb(251,146,60)".into(),
                    hsl: "hsl(27,96%,61%)".into(),
                },
                ColorScaleValue {
                    scale: 500,
                    hex: "#f97316".into(),
                    rgb: "rgb(249,115,22)".into(),
                    hsl: "hsl(24.6,95%,53.1%)".into(),
                },
                ColorScaleValue {
                    scale: 600,
                    hex: "#ea580c".into(),
                    rgb: "rgb(234,88,12)".into(),
                    hsl: "hsl(20.5,90.2%,48.2%)".into(),
                },
                ColorScaleValue {
                    scale: 700,
                    hex: "#c2410c".into(),
                    rgb: "rgb(194,65,12)".into(),
                    hsl: "hsl(17.5,88.3%,40.4%)".into(),
                },
                ColorScaleValue {
                    scale: 800,
                    hex: "#9a3412".into(),
                    rgb: "rgb(154,52,18)".into(),
                    hsl: "hsl(15,79.1%,33.7%)".into(),
                },
                ColorScaleValue {
                    scale: 900,
                    hex: "#7c2d12".into(),
                    rgb: "rgb(124,45,18)".into(),
                    hsl: "hsl(15.3,74.6%,27.8%)".into(),
                },
                ColorScaleValue {
                    scale: 950,
                    hex: "#431407".into(),
                    rgb: "rgb(67,20,7)".into(),
                    hsl: "hsl(13,81.1%,14.5%)".into(),
                },
            ]),
        ),
        (
            "amber".into(),
            Color::Values(vec![
                ColorScaleValue {
                    scale: 50,
                    hex: "#fffbeb".into(),
                    rgb: "rgb(255,251,235)".into(),
                    hsl: "hsl(48,100%,96.1%)".into(),
                },
                ColorScaleValue {
                    scale: 100,
                    hex: "#fef3c7".into(),
                    rgb: "rgb(254,243,199)".into(),
                    hsl: "hsl(48,96.5%,88.8%)".into(),
                },
                ColorScaleValue {
                    scale: 200,
                    hex: "#fde68a".into(),
                    rgb: "rgb(253,230,138)".into(),
                    hsl: "hsl(48,96.6%,76.7%)".into(),
                },
                ColorScaleValue {
                    scale: 300,
                    hex: "#fcd34d".into(),
                    rgb: "rgb(252,211,77)".into(),
                    hsl: "hsl(45.9,96.7%,64.5%)".into(),
                },
                ColorScaleValue {
                    scale: 400,
                    hex: "#fbbf24".into(),
                    rgb: "rgb(251,191,36)".into(),
                    hsl: "hsl(43.3,96.4%,56.3%)".into(),
                },
                ColorScaleValue {
                    scale: 500,
                    hex: "#f59e0b".into(),
                    rgb: "rgb(245,158,11)".into(),
                    hsl: "hsl(37.7,92.1%,50.2%)".into(),
                },
                ColorScaleValue {
                    scale: 600,
                    hex: "#d97706".into(),
                    rgb: "rgb(217,119,6)".into(),
                    hsl: "hsl(32.1,94.6%,43.7%)".into(),
                },
                ColorScaleValue {
                    scale: 700,
                    hex: "#b45309".into(),
                    rgb: "rgb(180,83,9)".into(),
                    hsl: "hsl(26,90.5%,37.1%)".into(),
                },
                ColorScaleValue {
                    scale: 800,
                    hex: "#92400e".into(),
                    rgb: "rgb(146,64,14)".into(),
                    hsl: "hsl(22.7,82.5%,31.4%)".into(),
                },
                ColorScaleValue {
                    scale: 900,
                    hex: "#78350f".into(),
                    rgb: "rgb(120,53,15)".into(),
                    hsl: "hsl(21.7,77.8%,26.5%)".into(),
                },
                ColorScaleValue {
                    scale: 950,
                    hex: "#451a03".into(),
                    rgb: "rgb(69,26,3)".into(),
                    hsl: "hsl(20.9,91.7%,14.1%)".into(),
                },
            ]),
        ),
        (
            "yellow".into(),
            Color::Values(vec![
                ColorScaleValue {
                    scale: 50,
                    hex: "#fefce8".into(),
                    rgb: "rgb(254,252,232)".into(),
                    hsl: "hsl(54.5,91.7%,95.3%)".into(),
                },
                ColorScaleValue {
                    scale: 100,
                    hex: "#fef9c3".into(),
                    rgb: "rgb(254,249,195)".into(),
                    hsl: "hsl(54.9,96.7%,88%)".into(),
                },
                ColorScaleValue {
                    scale: 200,
                    hex: "#fef08a".into(),
                    rgb: "rgb(254,240,138)".into(),
                    hsl: "hsl(52.8,98.3%,76.9%)".into(),
                },
                ColorScaleValue {
                    scale: 300,
                    hex: "#fde047".into(),
                    rgb: "rgb(253,224,71)".into(),
                    hsl: "hsl(50.4,97.8%,63.5%)".into(),
                },
                ColorScaleValue {
                    scale: 400,
                    hex: "#facc15".into(),
                    rgb: "rgb(250,204,21)".into(),
                    hsl: "hsl(47.9,95.8%,53.1%)".into(),
                },
                ColorScaleValue {
                    scale: 500,
                    hex: "#eab308".into(),
                    rgb: "rgb(234,179,8)".into(),
                    hsl: "hsl(45.4,93.4%,47.5%)".into(),
                },
                ColorScaleValue {
                    scale: 600,
                    hex: "#ca8a04".into(),
                    rgb: "rgb(202,138,4)".into(),
                    hsl: "hsl(40.6,96.1%,40.4%)".into(),
                },
                ColorScaleValue {
                    scale: 700,
                    hex: "#a16207".into(),
                    rgb: "rgb(161,98,7)".into(),
                    hsl: "hsl(35.5,91.7%,32.9%)".into(),
                },
                ColorScaleValue {
                    scale: 800,
                    hex: "#854d0e".into(),
                    rgb: "rgb(133,77,14)".into(),
                    hsl: "hsl(31.8,81%,28.8%)".into(),
                },
                ColorScaleValue {
                    scale: 900,
                    hex: "#713f12".into(),
                    rgb: "rgb(113,63,18)".into(),
                    hsl: "hsl(28.4,72.5%,25.7%)".into(),
                },
                ColorScaleValue {
                    scale: 950,
                    hex: "#422006".into(),
                    rgb: "rgb(66,32,6)".into(),
                    hsl: "hsl(26,83.3%,14.1%)".into(),
                },
            ]),
        ),
        (
            "lime".into(),
            Color::Values(vec![
                ColorScaleValue {
                    scale: 50,
                    hex: "#f7fee7".into(),
                    rgb: "rgb(247,254,231)".into(),
                    hsl: "hsl(78.3,92%,95.1%)".into(),
                },
                ColorScaleValue {
                    scale: 100,
                    hex: "#ecfccb".into(),
                    rgb: "rgb(236,252,203)".into(),
                    hsl: "hsl(79.6,89.1%,89.2%)".into(),
                },
                ColorScaleValue {
                    scale: 200,
                    hex: "#d9f99d".into(),
                    rgb: "rgb(217,249,157)".into(),
                    hsl: "hsl(80.9,88.5%,79.6%)".into(),
                },
                ColorScaleValue {
                    scale: 300,
                    hex: "#bef264".into(),
                    rgb: "rgb(190,242,100)".into(),
                    hsl: "hsl(82,84.5%,67.1%)".into(),
                },
                ColorScaleValue {
                    scale: 400,
                    hex: "#a3e635".into(),
                    rgb: "rgb(163,230,53)".into(),
                    hsl: "hsl(82.7,78%,55.5%)".into(),
                },
                ColorScaleValue {
                    scale: 500,
                    hex: "#84cc16".into(),
                    rgb: "rgb(132,204,22)".into(),
                    hsl: "hsl(83.7,80.5%,44.3%)".into(),
                },
                ColorScaleValue {
                    scale: 600,
                    hex: "#65a30d".into(),
                    rgb: "rgb(101,163,13)".into(),
                    hsl: "hsl(84.8,85.2%,34.5%)".into(),
                },
                ColorScaleValue {
                    scale: 700,
                    hex: "#4d7c0f".into(),
                    rgb: "rgb(77,124,15)".into(),
                    hsl: "hsl(85.9,78.4%,27.3%)".into(),
                },
                ColorScaleValue {
                    scale: 800,
                    hex: "#3f6212".into(),
                    rgb: "rgb(63,98,18)".into(),
                    hsl: "hsl(86.3,69%,22.7%)".into(),
                },
                ColorScaleValue {
                    scale: 900,
                    hex: "#365314".into(),
                    rgb: "rgb(54,83,20)".into(),
                    hsl: "hsl(87.6,61.2%,20.2%)".into(),
                },
                ColorScaleValue {
                    scale: 950,
                    hex: "#1a2e05".into(),
                    rgb: "rgb(26,46,5)".into(),
                    hsl: "hsl(89.3,80.4%,10%)".into(),
                },
            ]),
        ),
        (
            "green".into(),
            Color::Values(vec![
                ColorScaleValue {
                    scale: 50,
                    hex: "#f0fdf4".into(),
                    rgb: "rgb(240,253,244)".into(),
                    hsl: "hsl(138.5,76.5%,96.7%)".into(),
                },
                ColorScaleValue {
                    scale: 100,
                    hex: "#dcfce7".into(),
                    rgb: "rgb(220,252,231)".into(),
                    hsl: "hsl(140.6,84.2%,92.5%)".into(),
                },
                ColorScaleValue {
                    scale: 200,
                    hex: "#bbf7d0".into(),
                    rgb: "rgb(187,247,208)".into(),
                    hsl: "hsl(141,78.9%,85.1%)".into(),
                },
                ColorScaleValue {
                    scale: 300,
                    hex: "#86efac".into(),
                    rgb: "rgb(134,239,172)".into(),
                    hsl: "hsl(141.7,76.6%,73.1%)".into(),
                },
                ColorScaleValue {
                    scale: 400,
                    hex: "#4ade80".into(),
                    rgb: "rgb(74,222,128)".into(),
                    hsl: "hsl(141.9,69.2%,58%)".into(),
                },
                ColorScaleValue {
                    scale: 500,
                    hex: "#22c55e".into(),
                    rgb: "rgb(34,197,94)".into(),
                    hsl: "hsl(142.1,70.6%,45.3%)".into(),
                },
                ColorScaleValue {
                    scale: 600,
                    hex: "#16a34a".into(),
                    rgb: "rgb(22,163,74)".into(),
                    hsl: "hsl(142.1,76.2%,36.3%)".into(),
                },
                ColorScaleValue {
                    scale: 700,
                    hex: "#15803d".into(),
                    rgb: "rgb(21,128,61)".into(),
                    hsl: "hsl(142.4,71.8%,29.2%)".into(),
                },
                ColorScaleValue {
                    scale: 800,
                    hex: "#166534".into(),
                    rgb: "rgb(22,101,52)".into(),
                    hsl: "hsl(142.8,64.2%,24.1%)".into(),
                },
                ColorScaleValue {
                    scale: 900,
                    hex: "#14532d".into(),
                    rgb: "rgb(20,83,45)".into(),
                    hsl: "hsl(143.8,61.2%,20.2%)".into(),
                },
                ColorScaleValue {
                    scale: 950,
                    hex: "#052e16".into(),
                    rgb: "rgb(5,46,22)".into(),
                    hsl: "hsl(144.9,80.4%,10%)".into(),
                },
            ]),
        ),
        (
            "emerald".into(),
            Color::Values(vec![
                ColorScaleValue {
                    scale: 50,
                    hex: "#ecfdf5".into(),
                    rgb: "rgb(236,253,245)".into(),
                    hsl: "hsl(151.8,81%,95.9%)".into(),
                },
                ColorScaleValue {
                    scale: 100,
                    hex: "#d1fae5".into(),
                    rgb: "rgb(209,250,229)".into(),
                    hsl: "hsl(149.3,80.4%,90%)".into(),
                },
                ColorScaleValue {
                    scale: 200,
                    hex: "#a7f3d0".into(),
                    rgb: "rgb(167,243,208)".into(),
                    hsl: "hsl(152.4,76%,80.4%)".into(),
                },
                ColorScaleValue {
                    scale: 300,
                    hex: "#6ee7b7".into(),
                    rgb: "rgb(110,231,183)".into(),
                    hsl: "hsl(156.2,71.6%,66.9%)".into(),
                },
                ColorScaleValue {
                    scale: 400,
                    hex: "#34d399".into(),
                    rgb: "rgb(52,211,153)".into(),
                    hsl: "hsl(158.1,64.4%,51.6%)".into(),
                },
                ColorScaleValue {
                    scale: 500,
                    hex: "#10b981".into(),
                    rgb: "rgb(16,185,129)".into(),
                    hsl: "hsl(160.1,84.1%,39.4%)".into(),
                },
                ColorScaleValue {
                    scale: 600,
                    hex: "#059669".into(),
                    rgb: "rgb(5,150,105)".into(),
                    hsl: "hsl(161.4,93.5%,30.4%)".into(),
                },
                ColorScaleValue {
                    scale: 700,
                    hex: "#047857".into(),
                    rgb: "rgb(4,120,87)".into(),
                    hsl: "hsl(162.9,93.5%,24.3%)".into(),
                },
                ColorScaleValue {
                    scale: 800,
                    hex: "#065f46".into(),
                    rgb: "rgb(6,95,70)".into(),
                    hsl: "hsl(163.1,88.1%,19.8%)".into(),
                },
                ColorScaleValue {
                    scale: 900,
                    hex: "#064e3b".into(),
                    rgb: "rgb(6,78,59)".into(),
                    hsl: "hsl(164.2,85.7%,16.5%)".into(),
                },
                ColorScaleValue {
                    scale: 950,
                    hex: "#022c22".into(),
                    rgb: "rgb(2,44,34)".into(),
                    hsl: "hsl(165.7,91.3%,9%)".into(),
                },
            ]),
        ),
        (
            "teal".into(),
            Color::Values(vec![
                ColorScaleValue {
                    scale: 50,
                    hex: "#f0fdfa".into(),
                    rgb: "rgb(240,253,250)".into(),
                    hsl: "hsl(166.2,76.5%,96.7%)".into(),
                },
                ColorScaleValue {
                    scale: 100,
                    hex: "#ccfbf1".into(),
                    rgb: "rgb(204,251,241)".into(),
                    hsl: "hsl(167.2,85.5%,89.2%)".into(),
                },
                ColorScaleValue {
                    scale: 200,
                    hex: "#99f6e4".into(),
                    rgb: "rgb(153,246,228)".into(),
                    hsl: "hsl(168.4,83.8%,78.2%)".into(),
                },
                ColorScaleValue {
                    scale: 300,
                    hex: "#5eead4".into(),
                    rgb: "rgb(94,234,212)".into(),
                    hsl: "hsl(170.6,76.9%,64.3%)".into(),
                },
                ColorScaleValue {
                    scale: 400,
                    hex: "#2dd4bf".into(),
                    rgb: "rgb(45,212,191)".into(),
                    hsl: "hsl(172.5,66%,50.4%)".into(),
                },
                ColorScaleValue {
                    scale: 500,
                    hex: "#14b8a6".into(),
                    rgb: "rgb(20,184,166)".into(),
                    hsl: "hsl(173.4,80.4%,40%)".into(),
                },
                ColorScaleValue {
                    scale: 600,
                    hex: "#0d9488".into(),
                    rgb: "rgb(13,148,136)".into(),
                    hsl: "hsl(174.7,83.9%,31.6%)".into(),
                },
                ColorScaleValue {
                    scale: 700,
                    hex: "#0f766e".into(),
                    rgb: "rgb(15,118,110)".into(),
                    hsl: "hsl(175.3,77.4%,26.1%)".into(),
                },
                ColorScaleValue {
                    scale: 800,
                    hex: "#115e59".into(),
                    rgb: "rgb(17,94,89)".into(),
                    hsl: "hsl(176.1,69.4%,21.8%)".into(),
                },
                ColorScaleValue {
                    scale: 900,
                    hex: "#134e4a".into(),
                    rgb: "rgb(19,78,74)".into(),
                    hsl: "hsl(175.9,60.8%,19%)".into(),
                },
                ColorScaleValue {
                    scale: 950,
                    hex: "#042f2e".into(),
                    rgb: "rgb(4,47,46)".into(),
                    hsl: "hsl(178.6,84.3%,10%)".into(),
                },
            ]),
        ),
        (
            "cyan".into(),
            Color::Values(vec![
                ColorScaleValue {
                    scale: 50,
                    hex: "#ecfeff".into(),
                    rgb: "rgb(236,254,255)".into(),
                    hsl: "hsl(183.2,100%,96.3%)".into(),
                },
                ColorScaleValue {
                    scale: 100,
                    hex: "#cffafe".into(),
                    rgb: "rgb(207,250,254)".into(),
                    hsl: "hsl(185.1,95.9%,90.4%)".into(),
                },
                ColorScaleValue {
                    scale: 200,
                    hex: "#a5f3fc".into(),
                    rgb: "rgb(165,243,252)".into(),
                    hsl: "hsl(186.2,93.5%,81.8%)".into(),
                },
                ColorScaleValue {
                    scale: 300,
                    hex: "#67e8f9".into(),
                    rgb: "rgb(103,232,249)".into(),
                    hsl: "hsl(187,92.4%,69%)".into(),
                },
                ColorScaleValue {
                    scale: 400,
                    hex: "#22d3ee".into(),
                    rgb: "rgb(34,211,238)".into(),
                    hsl: "hsl(187.9,85.7%,53.3%)".into(),
                },
                ColorScaleValue {
                    scale: 500,
                    hex: "#06b6d4".into(),
                    rgb: "rgb(6,182,212)".into(),
                    hsl: "hsl(188.7,94.5%,42.7%)".into(),
                },
                ColorScaleValue {
                    scale: 600,
                    hex: "#0891b2".into(),
                    rgb: "rgb(8,145,178)".into(),
                    hsl: "hsl(191.6,91.4%,36.5%)".into(),
                },
                ColorScaleValue {
                    scale: 700,
                    hex: "#0e7490".into(),
                    rgb: "rgb(14,116,144)".into(),
                    hsl: "hsl(192.9,82.3%,31%)".into(),
                },
                ColorScaleValue {
                    scale: 800,
                    hex: "#155e75".into(),
                    rgb: "rgb(21,94,117)".into(),
                    hsl: "hsl(194.4,69.6%,27.1%)".into(),
                },
                ColorScaleValue {
                    scale: 900,
                    hex: "#164e63".into(),
                    rgb: "rgb(22,78,99)".into(),
                    hsl: "hsl(196.4,63.6%,23.7%)".into(),
                },
                ColorScaleValue {
                    scale: 950,
                    hex: "#083344".into(),
                    rgb: "rgb(8,51,68)".into(),
                    hsl: "hsl(197,78.9%,14.9%)".into(),
                },
            ]),
        ),
        (
            "sky".into(),
            Color::Values(vec![
                ColorScaleValue {
                    scale: 50,
                    hex: "#f0f9ff".into(),
                    rgb: "rgb(240,249,255)".into(),
                    hsl: "hsl(204,100%,97.1%)".into(),
                },
                ColorScaleValue {
                    scale: 100,
                    hex: "#e0f2fe".into(),
                    rgb: "rgb(224,242,254)".into(),
                    hsl: "hsl(204,93.8%,93.7%)".into(),
                },
                ColorScaleValue {
                    scale: 200,
                    hex: "#bae6fd".into(),
                    rgb: "rgb(186,230,253)".into(),
                    hsl: "hsl(200.6,94.4%,86.1%)".into(),
                },
                ColorScaleValue {
                    scale: 300,
                    hex: "#7dd3fc".into(),
                    rgb: "rgb(125,211,252)".into(),
                    hsl: "hsl(199.4,95.5%,73.9%)".into(),
                },
                ColorScaleValue {
                    scale: 400,
                    hex: "#38bdf8".into(),
                    rgb: "rgb(56,189,248)".into(),
                    hsl: "hsl(198.4,93.2%,59.6%)".into(),
                },
                ColorScaleValue {
                    scale: 500,
                    hex: "#0ea5e9".into(),
                    rgb: "rgb(14,165,233)".into(),
                    hsl: "hsl(198.6,88.7%,48.4%)".into(),
                },
                ColorScaleValue {
                    scale: 600,
                    hex: "#0284c7".into(),
                    rgb: "rgb(2,132,199)".into(),
                    hsl: "hsl(200.4,98%,39.4%)".into(),
                },
                ColorScaleValue {
                    scale: 700,
                    hex: "#0369a1".into(),
                    rgb: "rgb(3,105,161)".into(),
                    hsl: "hsl(201.3,96.3%,32.2%)".into(),
                },
                ColorScaleValue {
                    scale: 800,
                    hex: "#075985".into(),
                    rgb: "rgb(7,89,133)".into(),
                    hsl: "hsl(201,90%,27.5%)".into(),
                },
                ColorScaleValue {
                    scale: 900,
                    hex: "#0c4a6e".into(),
                    rgb: "rgb(12,74,110)".into(),
                    hsl: "hsl(202,80.3%,23.9%)".into(),
                },
                ColorScaleValue {
                    scale: 950,
                    hex: "#082f49".into(),
                    rgb: "rgb(8,47,73)".into(),
                    hsl: "hsl(204,80.2%,15.9%)".into(),
                },
            ]),
        ),
        (
            "blue".into(),
            Color::Values(vec![
                ColorScaleValue {
                    scale: 50,
                    hex: "#eff6ff".into(),
                    rgb: "rgb(239,246,255)".into(),
                    hsl: "hsl(213.8,100%,96.9%)".into(),
                },
                ColorScaleValue {
                    scale: 100,
                    hex: "#dbeafe".into(),
                    rgb: "rgb(219,234,254)".into(),
                    hsl: "hsl(214.3,94.6%,92.7%)".into(),
                },
                ColorScaleValue {
                    scale: 200,
                    hex: "#bfdbfe".into(),
                    rgb: "rgb(191,219,254)".into(),
                    hsl: "hsl(213.3,96.9%,87.3%)".into(),
                },
                ColorScaleValue {
                    scale: 300,
                    hex: "#93c5fd".into(),
                    rgb: "rgb(147,197,253)".into(),
                    hsl: "hsl(211.7,96.4%,78.4%)".into(),
                },
                ColorScaleValue {
                    scale: 400,
                    hex: "#60a5fa".into(),
                    rgb: "rgb(96,165,250)".into(),
                    hsl: "hsl(213.1,93.9%,67.8%)".into(),
                },
                ColorScaleValue {
                    scale: 500,
                    hex: "#3b82f6".into(),
                    rgb: "rgb(59,130,246)".into(),
                    hsl: "hsl(217.2,91.2%,59.8%)".into(),
                },
                ColorScaleValue {
                    scale: 600,
                    hex: "#2563eb".into(),
                    rgb: "rgb(37,99,235)".into(),
                    hsl: "hsl(221.2,83.2%,53.3%)".into(),
                },
                ColorScaleValue {
                    scale: 700,
                    hex: "#1d4ed8".into(),
                    rgb: "rgb(29,78,216)".into(),
                    hsl: "hsl(224.3,76.3%,48%)".into(),
                },
                ColorScaleValue {
                    scale: 800,
                    hex: "#1e40af".into(),
                    rgb: "rgb(30,64,175)".into(),
                    hsl: "hsl(225.9,70.7%,40.2%)".into(),
                },
                ColorScaleValue {
                    scale: 900,
                    hex: "#1e3a8a".into(),
                    rgb: "rgb(30,58,138)".into(),
                    hsl: "hsl(224.4,64.3%,32.9%)".into(),
                },
                ColorScaleValue {
                    scale: 950,
                    hex: "#172554".into(),
                    rgb: "rgb(23,37,84)".into(),
                    hsl: "hsl(226.2,57%,21%)".into(),
                },
            ]),
        ),
        (
            "indigo".into(),
            Color::Values(vec![
                ColorScaleValue {
                    scale: 50,
                    hex: "#eef2ff".into(),
                    rgb: "rgb(238,242,255)".into(),
                    hsl: "hsl(225.9,100%,96.7%)".into(),
                },
                ColorScaleValue {
                    scale: 100,
                    hex: "#e0e7ff".into(),
                    rgb: "rgb(224,231,255)".into(),
                    hsl: "hsl(226.5,100%,93.9%)".into(),
                },
                ColorScaleValue {
                    scale: 200,
                    hex: "#c7d2fe".into(),
                    rgb: "rgb(199,210,254)".into(),
                    hsl: "hsl(228,96.5%,88.8%)".into(),
                },
                ColorScaleValue {
                    scale: 300,
                    hex: "#a5b4fc".into(),
                    rgb: "rgb(165,180,252)".into(),
                    hsl: "hsl(229.7,93.5%,81.8%)".into(),
                },
                ColorScaleValue {
                    scale: 400,
                    hex: "#818cf8".into(),
                    rgb: "rgb(129,140,248)".into(),
                    hsl: "hsl(234.5,89.5%,73.9%)".into(),
                },
                ColorScaleValue {
                    scale: 500,
                    hex: "#6366f1".into(),
                    rgb: "rgb(99,102,241)".into(),
                    hsl: "hsl(238.7,83.5%,66.7%)".into(),
                },
                ColorScaleValue {
                    scale: 600,
                    hex: "#4f46e5".into(),
                    rgb: "rgb(79,70,229)".into(),
                    hsl: "hsl(243.4,75.4%,58.6%)".into(),
                },
                ColorScaleValue {
                    scale: 700,
                    hex: "#4338ca".into(),
                    rgb: "rgb(67,56,202)".into(),
                    hsl: "hsl(244.5,57.9%,50.6%)".into(),
                },
                ColorScaleValue {
                    scale: 800,
                    hex: "#3730a3".into(),
                    rgb: "rgb(55,48,163)".into(),
                    hsl: "hsl(243.7,54.5%,41.4%)".into(),
                },
                ColorScaleValue {
                    scale: 900,
                    hex: "#312e81".into(),
                    rgb: "rgb(49,46,129)".into(),
                    hsl: "hsl(242.2,47.4%,34.3%)".into(),
                },
                ColorScaleValue {
                    scale: 950,
                    hex: "#1e1b4b".into(),
                    rgb: "rgb(30,27,75)".into(),
                    hsl: "hsl(243.8,47.1%,20%)".into(),
                },
            ]),
        ),
        (
            "violet".into(),
            Color::Values(vec![
                ColorScaleValue {
                    scale: 50,
                    hex: "#f5f3ff".into(),
                    rgb: "rgb(245,243,255)".into(),
                    hsl: "hsl(250,100%,97.6%)".into(),
                },
                ColorScaleValue {
                    scale: 100,
                    hex: "#ede9fe".into(),
                    rgb: "rgb(237,233,254)".into(),
                    hsl: "hsl(251.4,91.3%,95.5%)".into(),
                },
                ColorScaleValue {
                    scale: 200,
                    hex: "#ddd6fe".into(),
                    rgb: "rgb(221,214,254)".into(),
                    hsl: "hsl(250.5,95.2%,91.8%)".into(),
                },
                ColorScaleValue {
                    scale: 300,
                    hex: "#c4b5fd".into(),
                    rgb: "rgb(196,181,253)".into(),
                    hsl: "hsl(252.5,94.7%,85.1%)".into(),
                },
                ColorScaleValue {
                    scale: 400,
                    hex: "#a78bfa".into(),
                    rgb: "rgb(167,139,250)".into(),
                    hsl: "hsl(255.1,91.7%,76.3%)".into(),
                },
                ColorScaleValue {
                    scale: 500,
                    hex: "#8b5cf6".into(),
                    rgb: "rgb(139,92,246)".into(),
                    hsl: "hsl(258.3,89.5%,66.3%)".into(),
                },
                ColorScaleValue {
                    scale: 600,
                    hex: "#7c3aed".into(),
                    rgb: "rgb(124,58,237)".into(),
                    hsl: "hsl(262.1,83.3%,57.8%)".into(),
                },
                ColorScaleValue {
                    scale: 700,
                    hex: "#6d28d9".into(),
                    rgb: "rgb(109,40,217)".into(),
                    hsl: "hsl(263.4,70%,50.4%)".into(),
                },
                ColorScaleValue {
                    scale: 800,
                    hex: "#5b21b6".into(),
                    rgb: "rgb(91,33,182)".into(),
                    hsl: "hsl(263.4,69.3%,42.2%)".into(),
                },
                ColorScaleValue {
                    scale: 900,
                    hex: "#4c1d95".into(),
                    rgb: "rgb(76,29,149)".into(),
                    hsl: "hsl(263.5,67.4%,34.9%)".into(),
                },
                ColorScaleValue {
                    scale: 950,
                    hex: "#1e1b4b".into(),
                    rgb: "rgb(46,16,101)".into(),
                    hsl: "hsl(261.2,72.6%,22.9%)".into(),
                },
            ]),
        ),
        (
            "purple".into(),
            Color::Values(vec![
                ColorScaleValue {
                    scale: 50,
                    hex: "#faf5ff".into(),
                    rgb: "rgb(250,245,255)".into(),
                    hsl: "hsl(270,100%,98%)".into(),
                },
                ColorScaleValue {
                    scale: 100,
                    hex: "#f3e8ff".into(),
                    rgb: "rgb(243,232,255)".into(),
                    hsl: "hsl(268.7,100%,95.5%)".into(),
                },
                ColorScaleValue {
                    scale: 200,
                    hex: "#e9d5ff".into(),
                    rgb: "rgb(233,213,255)".into(),
                    hsl: "hsl(268.6,100%,91.8%)".into(),
                },
                ColorScaleValue {
                    scale: 300,
                    hex: "#d8b4fe".into(),
                    rgb: "rgb(216,180,254)".into(),
                    hsl: "hsl(269.2,97.4%,85.1%)".into(),
                },
                ColorScaleValue {
                    scale: 400,
                    hex: "#c084fc".into(),
                    rgb: "rgb(192,132,252)".into(),
                    hsl: "hsl(270,95.2%,75.3%)".into(),
                },
                ColorScaleValue {
                    scale: 500,
                    hex: "#a855f7".into(),
                    rgb: "rgb(168,85,247)".into(),
                    hsl: "hsl(270.7,91%,65.1%)".into(),
                },
                ColorScaleValue {
                    scale: 600,
                    hex: "#9333ea".into(),
                    rgb: "rgb(147,51,234)".into(),
                    hsl: "hsl(271.5,81.3%,55.9%)".into(),
                },
                ColorScaleValue {
                    scale: 700,
                    hex: "#7e22ce".into(),
                    rgb: "rgb(126,34,206)".into(),
                    hsl: "hsl(272.1,71.7%,47.1%)".into(),
                },
                ColorScaleValue {
                    scale: 800,
                    hex: "#6b21a8".into(),
                    rgb: "rgb(107,33,168)".into(),
                    hsl: "hsl(272.9,67.2%,39.4%)".into(),
                },
                ColorScaleValue {
                    scale: 900,
                    hex: "#581c87".into(),
                    rgb: "rgb(88,28,135)".into(),
                    hsl: "hsl(273.6,65.6%,32%)".into(),
                },
                ColorScaleValue {
                    scale: 950,
                    hex: "#3b0764".into(),
                    rgb: "rgb(59,7,100)".into(),
                    hsl: "hsl(273.5,86.9%,21%)".into(),
                },
            ]),
        ),
        (
            "fuchsia".into(),
            Color::Values(vec![
                ColorScaleValue {
                    scale: 50,
                    hex: "#fdf4ff".into(),
                    rgb: "rgb(253,244,255)".into(),
                    hsl: "hsl(289.1,100%,97.8%)".into(),
                },
                ColorScaleValue {
                    scale: 100,
                    hex: "#fae8ff".into(),
                    rgb: "rgb(250,232,255)".into(),
                    hsl: "hsl(287,100%,95.5%)".into(),
                },
                ColorScaleValue {
                    scale: 200,
                    hex: "#f5d0fe".into(),
                    rgb: "rgb(245,208,254)".into(),
                    hsl: "hsl(288.3,95.8%,90.6%)".into(),
                },
                ColorScaleValue {
                    scale: 300,
                    hex: "#f0abfc".into(),
                    rgb: "rgb(240,171,252)".into(),
                    hsl: "hsl(291.1,93.1%,82.9%)".into(),
                },
                ColorScaleValue {
                    scale: 400,
                    hex: "#e879f9".into(),
                    rgb: "rgb(232,121,249)".into(),
                    hsl: "hsl(292,91.4%,72.5%)".into(),
                },
                ColorScaleValue {
                    scale: 500,
                    hex: "#d946ef".into(),
                    rgb: "rgb(217,70,239)".into(),
                    hsl: "hsl(292.2,84.1%,60.6%)".into(),
                },
                ColorScaleValue {
                    scale: 600,
                    hex: "#c026d3".into(),
                    rgb: "rgb(192,38,211)".into(),
                    hsl: "hsl(293.4,69.5%,48.8%)".into(),
                },
                ColorScaleValue {
                    scale: 700,
                    hex: "#a21caf".into(),
                    rgb: "rgb(162,28,175)".into(),
                    hsl: "hsl(294.7,72.4%,39.8%)".into(),
                },
                ColorScaleValue {
                    scale: 800,
                    hex: "#86198f".into(),
                    rgb: "rgb(134,25,143)".into(),
                    hsl: "hsl(295.4,70.2%,32.9%)".into(),
                },
                ColorScaleValue {
                    scale: 900,
                    hex: "#701a75".into(),
                    rgb: "rgb(112,26,117)".into(),
                    hsl: "hsl(296.7,63.6%,28%)".into(),
                },
                ColorScaleValue {
                    scale: 950,
                    hex: "#4a044e".into(),
                    rgb: "rgb(74,4,78)".into(),
                    hsl: "hsl(296.8,90.2%,16.1%)".into(),
                },
            ]),
        ),
        (
            "pink".into(),
            Color::Values(vec![
                ColorScaleValue {
                    scale: 50,
                    hex: "#fdf2f8".into(),
                    rgb: "rgb(253,242,248)".into(),
                    hsl: "hsl(327.3,73.3%,97.1%)".into(),
                },
                ColorScaleValue {
                    scale: 100,
                    hex: "#fce7f3".into(),
                    rgb: "rgb(252,231,243)".into(),
                    hsl: "hsl(325.7,77.8%,94.7%)".into(),
                },
                ColorScaleValue {
                    scale: 200,
                    hex: "#fbcfe8".into(),
                    rgb: "rgb(251,207,232)".into(),
                    hsl: "hsl(325.9,84.6%,89.8%)".into(),
                },
                ColorScaleValue {
                    scale: 300,
                    hex: "#f9a8d4".into(),
                    rgb: "rgb(249,168,212)".into(),
                    hsl: "hsl(327.4,87.1%,81.8%)".into(),
                },
                ColorScaleValue {
                    scale: 400,
                    hex: "#f472b6".into(),
                    rgb: "rgb(244,114,182)".into(),
                    hsl: "hsl(328.6,85.5%,70.2%)".into(),
                },
                ColorScaleValue {
                    scale: 500,
                    hex: "#ec4899".into(),
                    rgb: "rgb(236,72,153)".into(),
                    hsl: "hsl(330.4,81.2%,60.4%)".into(),
                },
                ColorScaleValue {
                    scale: 600,
                    hex: "#db2777".into(),
                    rgb: "rgb(219,39,119)".into(),
                    hsl: "hsl(333.3,71.4%,50.6%)".into(),
                },
                ColorScaleValue {
                    scale: 700,
                    hex: "#be185d".into(),
                    rgb: "rgb(190,24,93)".into(),
                    hsl: "hsl(335.1,77.6%,42%)".into(),
                },
                ColorScaleValue {
                    scale: 800,
                    hex: "#9d174d".into(),
                    rgb: "rgb(157,23,77)".into(),
                    hsl: "hsl(335.8,74.4%,35.3%)".into(),
                },
                ColorScaleValue {
                    scale: 900,
                    hex: "#831843".into(),
                    rgb: "rgb(131,24,67)".into(),
                    hsl: "hsl(335.9,69%,30.4%)".into(),
                },
                ColorScaleValue {
                    scale: 950,
                    hex: "#500724".into(),
                    rgb: "rgb(80,7,36)".into(),
                    hsl: "hsl(336.2,83.9%,17.1%)".into(),
                },
            ]),
        ),
        (
            "rose".into(),
            Color::Values(vec![
                ColorScaleValue {
                    scale: 50,
                    hex: "#fff1f2".into(),
                    rgb: "rgb(255,241,242)".into(),
                    hsl: "hsl(355.7,100%,97.3%)".into(),
                },
                ColorScaleValue {
                    scale: 100,
                    hex: "#ffe4e6".into(),
                    rgb: "rgb(255,228,230)".into(),
                    hsl: "hsl(355.6,100%,94.7%)".into(),
                },
                ColorScaleValue {
                    scale: 200,
                    hex: "#fecdd3".into(),
                    rgb: "rgb(254,205,211)".into(),
                    hsl: "hsl(352.7,96.1%,90%)".into(),
                },
                ColorScaleValue {
                    scale: 300,
                    hex: "#fda4af".into(),
                    rgb: "rgb(253,164,175)".into(),
                    hsl: "hsl(352.6,95.7%,81.8%)".into(),
                },
                ColorScaleValue {
                    scale: 400,
                    hex: "#fb7185".into(),
                    rgb: "rgb(251,113,133)".into(),
                    hsl: "hsl(351.3,94.5%,71.4%)".into(),
                },
                ColorScaleValue {
                    scale: 500,
                    hex: "#f43f5e".into(),
                    rgb: "rgb(244,63,94)".into(),
                    hsl: "hsl(349.7,89.2%,60.2%)".into(),
                },
                ColorScaleValue {
                    scale: 600,
                    hex: "#e11d48".into(),
                    rgb: "rgb(225,29,72)".into(),
                    hsl: "hsl(346.8,77.2%,49.8%)".into(),
                },
                ColorScaleValue {
                    scale: 700,
                    hex: "#be123c".into(),
                    rgb: "rgb(190,18,60)".into(),
                    hsl: "hsl(345.3,82.7%,40.8%)".into(),
                },
                ColorScaleValue {
                    scale: 800,
                    hex: "#9f1239".into(),
                    rgb: "rgb(159,18,57)".into(),
                    hsl: "hsl(343.4,79.7%,34.7%)".into(),
                },
                ColorScaleValue {
                    scale: 900,
                    hex: "#881337".into(),
                    rgb: "rgb(136,19,55)".into(),
                    hsl: "hsl(341.5,75.5%,30.4%)".into(),
                },
                ColorScaleValue {
                    scale: 950,
                    hex: "#4c0519".into(),
                    rgb: "rgb(76,5,25)".into(),
                    hsl: "hsl(343.1,87.7%,15.9%)".into(),
                },
            ]),
        ),
    ])
});

pub static COLOR_MAPPING: LazyLock<HashMap<Mode, HashMap<String, String>>> = LazyLock::new(|| {
    HashMap::from([
        (
            Mode::Light,
            HashMap::from([
                ("background".into(), "white".into()),
                ("foreground".into(), "{{base}}-950".into()),
                ("card".into(), "white".into()),
                ("card-foreground".into(), "{{base}}-950".into()),
                ("popover".into(), "white".into()),
                ("popover-foreground".into(), "{{base}}-950".into()),
                ("primary".into(), "{{base}}-900".into()),
                ("primary-foreground".into(), "{{base}}-50".into()),
                ("secondary".into(), "{{base}}-100".into()),
                ("secondary-foreground".into(), "{{base}}-900".into()),
                ("muted".into(), "{{base}}-100".into()),
                ("muted-foreground".into(), "{{base}}-500".into()),
                ("accent".into(), "{{base}}-100".into()),
                ("accent-foreground".into(), "{{base}}-900".into()),
                ("destructive".into(), "red-500".into()),
                ("destructive-foreground".into(), "{{base}}-50".into()),
                ("border".into(), "{{base}}-200".into()),
                ("input".into(), "{{base}}-200".into()),
                ("ring".into(), "{{base}}-950".into()),
                ("chart-1".into(), "12 76% 61%".into()),
                ("chart-2".into(), "173 58% 39%".into()),
                ("chart-3".into(), "197 37% 24%".into()),
                ("chart-4".into(), "43 74% 66%".into()),
                ("chart-5".into(), "27 87% 67%".into()),
            ]),
        ),
        (
            Mode::Dark,
            HashMap::from([
                ("background".into(), "{{base}}-950".into()),
                ("foreground".into(), "{{base}}-50".into()),
                ("card".into(), "{{base}}-950".into()),
                ("card-foreground".into(), "{{base}}-50".into()),
                ("popover".into(), "{{base}}-950".into()),
                ("popover-foreground".into(), "{{base}}-50".into()),
                ("primary".into(), "{{base}}-50".into()),
                ("primary-foreground".into(), "{{base}}-900".into()),
                ("secondary".into(), "{{base}}-800".into()),
                ("secondary-foreground".into(), "{{base}}-50".into()),
                ("muted".into(), "{{base}}-800".into()),
                ("muted-foreground".into(), "{{base}}-400".into()),
                ("accent".into(), "{{base}}-800".into()),
                ("accent-foreground".into(), "{{base}}-50".into()),
                ("destructive".into(), "red-900".into()),
                ("destructive-foreground".into(), "{{base}}-50".into()),
                ("border".into(), "{{base}}-800".into()),
                ("input".into(), "{{base}}-800".into()),
                ("ring".into(), "{{base}}-300".into()),
                ("chart-1".into(), "220 70% 50%".into()),
                ("chart-2".into(), "160 60% 45%".into()),
                ("chart-3".into(), "30 80% 55%".into()),
                ("chart-4".into(), "280 65% 60%".into()),
                ("chart-5".into(), "340 75% 55%".into()),
            ]),
        ),
    ])
});
